import {issueBookService,returnBookService,getBookTransactionHistory,getBooksIssuedInDateRange,getTotalRentGenerated,getBooksIssuedToUser} from '../services/transactionService.js'

// Controller to issue a book

export const issueBook = async (req, res) => {
    try {
        const { bookId, userId, issueDate } = req.body;
        const transaction = await issueBookService(bookId, userId, issueDate);
        res.status(200).json({message:'successfully issued',transaction,
            success:true});
    } catch (error) {
        res.status(500).json({ message: error.message ,success:false});
    }
};

// Controller to return a book and calculate rent

export const returnBook = async (req, res) => {
    try {
        const { bookId, userId, returnDate } = req.body;

        const transaction = await returnBookService(bookId, userId, returnDate);
        res.status(200).json({message:'successfully returned',transaction,success:true});
    } catch (error) {
        res.status(500).json({ message: error.message ,success:false});
    }
};

// controller for transaction history of Book

export const bookTransactionHistory = async (req, res) => {
    try {
        const { bookName } = req.query;
        const result = await getBookTransactionHistory(bookName);
        res.status(200).json({message:'transaction history retrieved',result,success:true});
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// Controller to get total rent generated by a book

export const totalRentGenerated = async (req, res) => {
    try {
        const { bookName } = req.query;
        const result = await getTotalRentGenerated(bookName);
        res.status(200).json({message:'Total rent generated',result,success:true});
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// Controller to get list of books issued to a specific person

export const booksIssuedToUser = async (req, res) => {
    try {
        const { userId } = req.query;
        const result = await getBooksIssuedToUser(userId);
        res.status(200).json({message:'book issued to a user ',result,success:true});
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// Controller to get list of books issued in a date range
export const booksIssuedInDateRange = async (req, res) => {
    try {
        const { startDate, endDate } = req.query;
        const result = await getBooksIssuedInDateRange(startDate, endDate);
        res.status(200).json({message:'book issued to a user in this date range',result,success:true});
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};